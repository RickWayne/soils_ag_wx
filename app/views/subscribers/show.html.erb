<% content_for :title do %>
  <%= title.html_safe %>
<% end %>

<% content_for :stylesheet do %>
  <%= stylesheet_link_tag "style" -%>
<% end %>

<% content_for :welcome do %>
    <%= do_welcome.html_safe %>
<% end %>

<% content_for :stylesheet do %>
  <%= stylesheet_link_tag "style" -%>
  <style type='text/css'>
    #map {
    	   width: 600px;
    	   height: 600px;
    	   border: 1px solid gray;
       }
  </style>
<% end %>

<% content_for :scripts do %>
  <script src="http://maps.google.com/maps/api/js?sensor=false&v=3"></script>
  <script src="http://openlayers.org/api/2.11/OpenLayers.js"></script>
  <script>

  $(document).ready(function() {
    init(window.location.href);
  });

  // make map available for easy debugging
  var map;
  var googleProj;
  var latLongProj;
  var AUTH_TOKEN = '<%= form_authenticity_token %>';
  var createURL;

  
  function createSubscriptionURLFrom(baseURL) {
    controllerPart = baseURL.substr(0,baseURL.lastIndexOf('/')); // e.g. http://host/foo/bar/subscribers
    return controllerPart.substr(0,controllerPart.lastIndexOf('/')) + '/subscriptions';
  }
  
  function select_value(id) {
    var e = document.getElementById(id);
    return(e.options[e.selectedIndex].value);
  }
  
  function create_subscription_from_selects() {
    latitude  = select_value("latitude");
    longitude = select_value("longitude");
    do_ajax(latitude,longitude);
  }

  function do_ajax(latitude,longitude) {
    // get the subscriber ID
    var subscriber_id = document.getElementById('subscriber_id').value;
    // get the desired product
    var e = document.getElementById("product");
    var product_id = e.options[e.selectedIndex].value;
    if (product_id == -1) {
      alert('Please select a product first');
      return;
    }
    $.ajax(
      {
        type: "POST",
        url: createURL + "?&authenticity_token=" + AUTH_TOKEN,
        async: false,
        data: {
          'subscription[latitude]':latitude,'subscription[longitude]':longitude,
          'subscription[subscriber_id]':subscriber_id,
          'subscription[product_id]':product_id,
          format:'html'},
        dataType: 'html',
        success: function(html)
        {
          sr = document.getElementById('subscribed');
          sr.innerHTML = html;
          // $('#summary_results').innerHTML = html;
        }
      });
  }
  function init(baseURL) {
    var googleProj = new OpenLayers.Projection("EPSG:900913");
    var latLongProj = new OpenLayers.Projection("EPSG:4326");
    
    createURL = createSubscriptionURLFrom(baseURL);

  	ll = new OpenLayers.LonLat(-98.0, 42.0);
  	ll.transform(latLongProj,googleProj);
  	ur = new OpenLayers.LonLat(-86.0, 50.0);
  	ur.transform(latLongProj,googleProj);
	
    var wiMnBounds = new OpenLayers.Bounds(ll.lon,ll.lat,ur.lon,ur.lat);
    /**
     * The commercial layers (Google, Virtual Earth, and Yahoo) are
     * in a custom projection - we're calling this Spherical Mercator.
     * GeoServer understands that requests for EPSG:900913 should
     * match the projection for these commercial layers.  Note that
     * this is not a standard EPSG code - so, if you want to load
     * layers from another WMS, it will have to be configured to work
     * with this projection.
     */
    var options = {
      // the "community" epsg code for spherical mercator
      projection: "EPSG:900913",
      // map horizontal units are meters
      units: "m",
      // this resolution displays the globe in one 256x256 pixel tile
      // maxResolution: 156543.0339,
      maxExtent: wiMnBounds
    };
  
    map = new OpenLayers.Map('map', options);
    // create Google Roads layer
    var groads = new OpenLayers.Layer.Google(
      "Google Hybrid",
      {
        'type': google.maps.MapTypeId.ROAD,
        'sphericalMercator': true,
        'minZoomLevel': 5
      }
    );
    map.addLayers([groads]);
    center = new OpenLayers.LonLat(-92.3,46.0);
    center.transform(latLongProj,googleProj);
  
    map.events.register('click', map,
      function(e) {
        
        xy = e.xy;
        var lonlat = map.getLonLatFromViewPortPx(xy);
        if (wiMnBounds.containsLonLat(lonlat)) {
          var point = new OpenLayers.Geometry.Point(lonlat.lon, lonlat.lat);
          point.transform(googleProj,latLongProj);
          var ok=confirm("Subscribe to "+point.x+", "+point.y+"?");
          if (ok==true) {
            do_ajax(point.y,point.x);
          } else {
            alert('Subscription cancelled');
          }
        } else {
          alert('Point is outside our data. Please choose a point closer to the center of the map.');
        }
      }
    );
    map.setCenter(center,1);
  }
  </script>
<% end %>

<% if flash[:notice] %>
  <p><strong><%= flash[:notice] %></strong></p>
<% end %>
<p>
  <b>Name:</b>
  <%=h @subscriber.name %>
  &nbsp;<b>Email:</b>
  <%=h @subscriber.email %>
  <!-- The "confirmed" field should always be set, really. If it's a number, it's the random token value that was sent
       out in the confirmation email, waiting for the user to click the link. If it's a date, then it refers to the timestamp
       they clicked that link and confirmed. If it's nothing at all, that's...weird. -->
  <% if @subscriber.confirmed %>
    <% if @subscriber.confirmed =~ /^[\d]+$/ %>
      <p><b>Email Not Yet Confirmed:</b>An email has been sent to <%=h @subscriber.email %>, containing instructions on confirming your address. Please
      check your email (possibly including your spam/junk-mail folders!) for a message from fewayne@wisc.edu, with the
      subject 'Please confirm your email address for your UWEX Ag Weather product subscriptions'.</p>
      <p>If you can't find the email, <%= link_to 'contact Rick Wayne', :controller => 'navigation', :action => :about %> and he'll
        fix the database for you.</p>
    <% else %>
      <% begin
          conf = Date.parse(@subscriber.confirmed)
          conf = conf.strftime('%b %d %Y')
         rescue ArgumentError => e
          conf = 'Email confirmation error (date invalid). Please contact us.'
         end %>
      <strong>Email address confirmed on</strong> <%=h conf %>
    <% end %>
  <% else %>
  <strong>Email confirmation error.</strong> Please contact us, and let us know that the "confirmed" string was missing.
  <%= @subscriber.inspect %>
  <% end %>
</p>
<input type="hidden" id="subscriber_id" value="<%= @subscriber[:id] %>"/>

<div id='subscribed'>
</div>
<h3>How To Subscribe</h3>
<p>To register for a new automated product email, select the desired product below. Then, use the selectors below to specify your lat/long coordinates, OR just click on the map.</p>
<select id="product">
  <%= product_select_options(@products) %>
</select>
<br/>
  <%= select_tag :latitude, options_for_select(latitudes) %> <label for="latitude"> Latitude</label>
  <%= select_tag :longitude, options_for_select(longitudes) %><label for="longitude"> West longitude</label>
  <input type='submit' onClick="create_subscription_from_selects();" value="Click to subscribe to lat/long displayed"/><br/>
  <p>OR click on the map below</p>
</p><div id="map"></div>
